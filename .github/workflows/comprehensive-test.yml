name: Comprehensive Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-matrix:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Test CLI installation
      run: |
        npm link
        mflow --version
        mflow --help

  corporate-test:
    name: Corporate Environment Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Test npx usage (no installation)
      run: |
        npm pack
        npx ./multiflow-cli-*.tgz --version
        npx ./multiflow-cli-*.tgz --help

  integration-workflow:
    name: Full Workflow Test
    runs-on: ubuntu-latest
    needs: test-matrix
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install and link
      run: |
        npm ci
        npm link
        
    - name: Create comprehensive test workspace
      run: |
        mkdir comprehensive-test
        cd comprehensive-test
        
        # Create realistic multi-repo structure
        for repo in frontend backend mobile docs database; do
          mkdir $repo
          cd $repo
          git init
          git config user.email "test@example.com"
          git config user.name "Test User"
          echo "# $repo Repository" > README.md
          echo "console.log('$repo');" > index.js
          git add .
          git commit -m "Initial $repo setup"
          cd ..
        done
        
    - name: Test complete MultiFlow workflow
      run: |
        cd comprehensive-test
        
        # Initialize MultiFlow
        mflow init
        
        # Test feature workflow
        mflow feature create test-integration
        mflow status test-integration
        
        # Make changes and commit
        echo "// Integration test change" >> frontend/index.js
        echo "// Integration test change" >> backend/index.js
        mflow feature commit test-integration -m "Add integration test changes"
        
        # Test profiles
        mflow profile create frontend-only --repos frontend mobile docs
        mflow profile create backend-only --repos backend database
        mflow profile list
        
        # Test health check
        mflow doctor
        
        # Test PR generation
        mflow pr test-integration --title "Integration test feature"
        
        # Cleanup
        mflow feature cleanup test-integration